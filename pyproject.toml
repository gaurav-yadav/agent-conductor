[project]
name = "agent-conductor"
version = "0.1.0"
description = "CLI Agent Conductor orchestrator and tooling."
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
  { name = "Agent Conductor Authors" }
]
keywords = ["agents", "cli", "orchestration", "tmux"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]
dependencies = [
  "click>=8.1",
  "fastapi>=0.111",
  "uvicorn[standard]>=0.30",
  "pydantic>=2.7",
  "sqlalchemy>=2.0",
  "sqlmodel>=0.0.16",
  "libtmux>=0.25",
  "watchdog>=4.0",
  "httpx>=0.27",
  "python-frontmatter>=1.1"
]

[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv]
package = true
dev-dependencies = [
  "pytest>=8.2",
  "pytest-asyncio>=0.23",
  "pytest-cov>=5.0",
  "mypy>=1.10",
  "ruff>=0.5.0",
  "black>=24.4",
  "types-requests>=2.32"
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E203"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
disallow_any_unimported = true
show_error_codes = true
plugins = []

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["agent_conductor"]

[project.scripts]
agent-conductor = "agent_conductor.cli.main:cli"
